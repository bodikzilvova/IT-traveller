import{m}from"./mapbox-gl-C3szAys-.js";import{M as R}from"./@mapbox-DkKJftln.js";import{r as y,p as $,c as g,o as M,a as L,b,d as h,e as z,m as C,f as B,F as Z,u as N,w as x,g as v,h as W,i as q,j as D,k as G,l as H}from"./@vue-Dd7PfzIL.js";function F(){return{map:H("mapbox-map",null)}}var k=new Map,U=/onMb([A-Z])(.+)/;function I(o){return k.has(o)||k.set(o,o.replace(U,(u,n,r)=>n.toLowerCase()+r)),k.get(o)}function A(o,u,n=[],r=null){const s=N(),e=g(()=>Object.entries(s).filter(([t,l])=>t.startsWith("on")&&typeof l=="function").map(([t])=>t)),p=new Map;function d(t){Array.isArray(t)&&t.forEach(l=>{const a=p.get(l);typeof a=="function"&&a()})}function i(t){Array.isArray(t)&&t.forEach(l=>{const a=I(l);if(!n.includes(a))return;const c=(...f)=>{o(`mb-${a}`,...f)};r?(v(u).on(a,r,c),p.set(l,()=>{v(u).off(a,r,c)})):(v(u).on(a,c),p.set(l,()=>{v(u).off(a,c)}))})}x(e,(t,l)=>{const a=Array.isArray(t)?(l??[]).filter(f=>!t.includes(f)):l??[],c=Array.isArray(l)?(t??[]).filter(f=>!l.includes(f)):t??[];if(v(u))d(a),i(c);else{const f=x(u,_=>{_&&(d(a),i(c),f())})}},{immediate:!0})}function E(o){return o.charAt(0).toUpperCase()+o.slice(1)}function O(o,u,n){function r(s){Object.keys(o).filter(e=>o[e]!==void 0&&o[e]!==null).forEach(e=>{var p,d;const i=e==="mapStyle"?"setStyle":`set${E(e)}`,t=typeof s[i]=="function",l=typeof n[e]>"u"||"bind"in n[e]?(d=(p=n[e])==null?void 0:p.bind)!=null?d:!1:!0;if(!t||!l)return;const{type:a}=o[e],c={deep:a===Object||Array.isArray(a)&&a.includes(Object)};x(()=>o[e],f=>{s[i](f)},c)})}if(v(u))r(v(u));else{const s=x(u,e=>{e&&(r(e),s())})}}var S=(o,u)=>{const n=o.__vccOpts||o;for(const[r,s]of u)n[r]=s;return n};if(!m)throw new Error("mapboxgl is not installed.");if(!R)throw new Error("MapboxGeocoder is not installed.");var J={key:0},K={key:1};if(!m)throw new Error("mapboxgl is not installed.");var{LngLatBounds:w,LngLat:Q}=m,j={accessToken:{type:String,default:"no-token"},container:{type:[typeof HTMLElement<"u"&&HTMLElement,String],default:void 0},minZoom:{type:Number,default:0},maxZoom:{type:Number,default:22},minPitch:{type:Number,default:0},maxPitch:{type:Number,default:60},mapStyle:{type:[Object,String],required:!0},hash:{type:Boolean,default:!1},interactive:{type:Boolean,default:!0},bearingSnap:{type:Number,default:7},pitchWithRotate:{type:Boolean,default:!0},clickTolerance:{type:Number,default:3},attributionControl:{type:Boolean,default:!0},customAttribution:{type:[String,Array],default:null},logoPosition:{type:String,default:"bottom-left"},failIfMajorPerformanceCaveat:{type:Boolean,default:!1},preserveDrawingBuffer:{type:Boolean,default:!1},antialias:{type:Boolean,default:!1},refreshExpiredTiles:{type:Boolean,default:!0},maxBounds:{type:[w,Array],default:void 0},scrollZoom:{type:[Boolean,Object],default:!0},boxZoom:{type:Boolean,default:!0},dragRotate:{type:Boolean,default:!0},dragPan:{type:[Boolean,Object],default:!0},keyboard:{type:Boolean,default:!0},doubleClickZoom:{type:Boolean,default:!0},touchZoomRotate:{type:[Boolean,Object],default:!0},trackResize:{type:Boolean,default:!0},center:{type:[Q,Array,Object],default:()=>[0,0]},zoom:{type:Number,default:0},bearing:{type:Number,default:0},pitch:{type:Number,default:0},bounds:{type:[w,Array],default:void 0},fitBoundsOptions:{type:Object,default:null},renderWorldCopies:{type:Boolean,default:!0},maxTileCacheSize:{type:Number,default:null},localIdeographFontFamily:{type:String,default:"sans-serif"},transformRequest:{type:Function,default:null},collectResourceTiming:{type:Boolean,default:!1},fadeDuration:{type:Number,default:300},crossSourceCollisions:{type:Boolean,default:!0},cooperativeGestures:{type:Boolean},language:{type:[String,Array],default:null},locale:{type:Object,default:null},localFontFamily:{type:[Boolean,String],default:!1},minTileCacheSize:{type:Number,default:null},optimizeForTerrain:{type:Boolean,default:!0},performanceMetricsCollection:{type:Boolean,default:!0},projection:{type:[String,Object],default:"mercator"},testMode:{type:Boolean,default:!1},touchPitch:{type:[Boolean,Object],default:!0},useWebGL2:{type:Boolean,default:!1},worldview:{type:String,default:null}},X=["boxzoomcancel","boxzoomend","boxzoomstart","click","contextmenu","data","dataloading","dblclick","drag","dragend","dragstart","error","idle","load","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","move","moveend","movestart","pitch","pitchend","pitchstart","remove","render","resize","rotate","rotateend","rotatestart","sourcedata","sourcedataloading","styledata","styledataloading","styleimagemissing","touchcancel","touchend","touchmove","touchstart","webglcontextlost","webglcontextrestored","wheel","zoom","zoomend","zoomstart"],Y={inheritAttrs:!1},V=Object.assign(Y,{__name:"MapboxMap",props:j,setup(o,{expose:u,emit:n}){const r=o,s=n,e=y();$("mapbox-map",e);const p=y(),d=y(!1),i=g(()=>{const{accessToken:t,mapStyle:l,...a}=r;return!a.container&&p.value&&(a.container=p.value),{style:l,...a}});return A(s,e,X),O(r,e,j),M(()=>{m.accessToken=r.accessToken,e.value=new m.Map(i.value),e.value.on("load",()=>{d.value=!0}),s("mb-created",e.value);const t=new ResizeObserver(()=>{e.value.resize()});t.observe(i.value.container),L(()=>{t.disconnect(),e.value.remove()})}),u({map:e}),(t,l)=>(b(),h(Z,null,[z("div",C({ref_key:"root",ref:p},t.$attrs),null,16),d.value?(b(),h("div",J,[B(t.$slots,"default")])):(b(),h("div",K,[B(t.$slots,"loader")]))],64))}}),fe=S(V,[["__file","/home/runner/work/vue-mapbox-gl/vue-mapbox-gl/packages/vue-mapbox-gl/components/MapboxMap.vue"]]);if(!m)throw new Error("mapboxgl is not installed.");var{Popup:ee,Point:te,LngLat:oe}=m,P={lngLat:{type:[oe,Array,Object],required:!0},closeButton:{type:Boolean,default:!0},closeOnClick:{type:Boolean,default:!0},closeOnMove:{type:Boolean,default:!1},anchor:{type:String,default:null},offset:{type:[Number,te,Array,Object],default:0},className:{type:String,default:null},maxWidth:{type:String,default:"240px"},renderless:{type:Boolean,default:!1,bind:!1}},ae=["open","close"],ne={__name:"MapboxPopup",props:P,setup(o,{expose:u,emit:n}){const r=o,s=n,e=y(),p=y(),d=g(()=>{const{lngLat:i,...t}=r;return t});return O(r,e,P),A(s,e,ae),M(()=>{const{map:i}=F();e.value=new ee(d.value).setLngLat(r.lngLat).setDOMContent(p.value),r.renderless||e.value.addTo(i.value),s("mb-open",e.value)}),L(()=>{e.value&&e.value.remove()}),u({popup:e}),(i,t)=>(b(),h("div",{ref_key:"root",ref:p},[B(i.$slots,"default")],512))}},re=S(ne,[["__file","/home/runner/work/vue-mapbox-gl/vue-mapbox-gl/packages/vue-mapbox-gl/components/MapboxPopup.vue"]]),{Marker:le,Point:ue}=m,T={lngLat:{type:Array,required:!0},popup:{type:[Object,Boolean],default:!1,bind:!1},element:{type:typeof HTMLElement<"u"?HTMLElement:Object,default:null},offset:{type:[ue,Array],default:null},anchor:{type:String,default:"center"},color:{type:String,default:null},scale:{type:Number,default:1},draggable:{type:Boolean,default:!1},rotation:{type:Number,default:0},pitchAlignment:{type:String,default:"auto"},rotationAlignment:{type:String,default:"auto"}},se=["dragstart","drag","dragend"],ie={__name:"MapboxMarker",props:T,setup(o,{emit:u}){const n=o,r=u,s=W(),e=y(),p=y(),d=y(),i=g(()=>typeof s.popup<"u"),t=g(()=>i.value?d.value.popup:null),l=g(()=>({lngLat:n.lngLat,...n.popup?n.popup:{},renderless:!0})),a=g(()=>{const{lngLat:c,popup:f,..._}=n;return s.default&&(_.element=p.value),_});return O(n,e,T),A(r,e,se),M(()=>{const{map:c}=F();e.value=new le(a.value).setLngLat(n.lngLat).addTo(c.value),i.value&&e.value.setPopup(t.value)}),L(()=>{e.value&&e.value.remove()}),(c,f)=>(b(),h("div",null,[z("div",{ref_key:"contentRef",ref:p},[B(c.$slots,"default")],512),i.value?(b(),q(re,C({key:0,ref_key:"popupRef",ref:d},l.value),{default:D(()=>[B(c.$slots,"popup")]),_:3},16)):G("v-if",!0)]))}},ye=S(ie,[["__file","/home/runner/work/vue-mapbox-gl/vue-mapbox-gl/packages/vue-mapbox-gl/components/MapboxMarker.vue"]]);export{fe as M,ye as a};
